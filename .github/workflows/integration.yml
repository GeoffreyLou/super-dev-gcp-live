name: Terraform plan

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  terraform_plan:
    if: contains(github.event.pull_request.labels.*.name, 'skip-ci') == false
    name: Terraform plan

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      TERRAFORM_VERSION: 1.10.0
      ENVIRONMENT: prod
      GCP_REGION: europe-west9
      GCP_PROJECT_ID:  ${{ secrets.GCP_PROJECT_ID }}
      GCP_CI_CD_SERVICE_ACCOUNT: ${{ secrets.GCP_CI_CD_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_BACKEND_SECRET : ${{ secrets.GCP_BACKEND_SECRET }}
      GCP_TFVARS_SECRET : ${{ secrets.GCP_TFVARS_SECRET }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Display github author
        run: |
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "ACTOR: ${{ github.actor }}"

      - name: Auth to GCP
        id: get_gcp_access_token
        uses: 'google-github-actions/auth@v3'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_CI_CD_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Set up Cloud SDK
        id: setup_gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Get backend secret
        id: get_backend_secret
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            backend_secret:${{ env.GCP_PROJECT_ID }}/${{ env.GCP_BACKEND_SECRET }}
            
      - name: Create backend file
        run: echo '${{ steps.get_backend_secret.outputs.backend_secret }}' > terraform/environments/${{ env.ENVIRONMENT }}/backend.tf

      - name: Get tfvars secret
        id: get_tfvars_secret
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            tfvars_secret:${{ env.GCP_PROJECT_ID }}/${{ env.GCP_TFVARS_SECRET }}
            
      - name: Create tfvars file
        run: echo '${{ steps.get_tfvars_secret.outputs.tfvars_secret }}' > terraform/environments/${{ env.ENVIRONMENT }}/terraform.tfvars

      - name: Terraform init
        id: terraform_init
        working-directory: ./terraform/environments/${{ env.ENVIRONMENT }}
        run: terraform init

      - name: Terraform plan
        id: terraform_plan
        working-directory: ./terraform/environments/${{ env.ENVIRONMENT }}
        run: terraform plan